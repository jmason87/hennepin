name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      CI_SQLITE: 'true'
    strategy:
      matrix:
        # Run tests against the project's declared Python version.
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f Pipfile ]; then
          pip install pipenv
          if [ -f Pipfile.lock ]; then
            # Use a locked, deterministic install when Pipfile.lock exists
            pipenv sync --dev
          else
            pipenv install --dev --skip-lock
          fi
        else
          pip install -r requirements.txt
        fi
    - name: Run Tests
      run: |
        pipenv run pytest
